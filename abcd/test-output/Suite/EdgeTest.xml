<?xml version="1.0" encoding="UTF-8"?>
<!-- Generated by org.testng.reporters.JUnitXMLReporter -->
<testsuite ignored="0" hostname="DESKTOP-B87O47C" failures="0" tests="1" name="EdgeTest" time="98.162" errors="0" timestamp="2021-11-02T21:38:28 IST">
  <testcase classname="TestPackage.LoginTest" name="@BeforeClass createObjectofPOM" time="-1.635869308053E9">
    <failure type="org.testng.TestNGException" message="
Can inject only one of &amp;lt;ITestContext, XmlTest&amp;gt; into a @BeforeClass annotated createObjectofPOM.
For more information on native dependency injection please refer to https://testng.org/doc/documentation-main.html#native-dependency-injection">
      <![CDATA[org.testng.TestNGException: 
Can inject only one of <ITestContext, XmlTest> into a @BeforeClass annotated createObjectofPOM.
For more information on native dependency injection please refer to https://testng.org/doc/documentation-main.html#native-dependency-injection
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
... Removed 22 stack frames]]>
    </failure>
  </testcase> <!-- @BeforeClass createObjectofPOM -->
  <testcase classname="TestPackage.LoginTest" name="@BeforeMethod loginToApplication" time="-1.635869308061E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod loginToApplication -->
  <testcase classname="TestPackage.LoginTest" name="@AfterMethod logoutFromApp" time="-1.635869308069E9">
    <skipped/>
  </testcase> <!-- @AfterMethod logoutFromApp -->
  <testcase classname="TestPackage.LoginTest" name="@AfterClass clearPOMobject" time="-1.635869308072E9">
    <skipped/>
  </testcase> <!-- @AfterClass clearPOMobject -->
  <testcase classname="TestPackage.LoginTest" name="@AfterTest closeBrowser" time="-1.635869308076E9">
    <skipped/>
  </testcase> <!-- @AfterTest closeBrowser -->
  <testcase classname="TestPackage.LoginTest" name="verifyCalanderPage" time="0.0">
    <skipped/>
  </testcase> <!-- verifyCalanderPage -->
</testsuite> <!-- EdgeTest -->
